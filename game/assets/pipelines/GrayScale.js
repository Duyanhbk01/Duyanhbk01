const fragShader="\nprecision mediump float;\n\nuniform sampler2D uMainSampler[%count%];\nuniform float gray;\n\nvarying vec2 outTexCoord;\nvarying float outTexId;\nvarying vec4 outTint;\nvarying vec2 fragCoord;\n\nvoid main()\n{\n    vec4 texture;\n\n    %forloop%\n\n    gl_FragColor = texture;\n    gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.2126 * gl_FragColor.r + 0.7152 * gl_FragColor.g + 0.0722 * gl_FragColor.b), gray);\n}\n";export default class GrayScalePipeline extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline{constructor(r){super({game:r,fragShader,uniforms:["uProjectionMatrix","uMainSampler","gray"]}),this._gray=1}onPreRender(){this.set1f("gray",this._gray)}get gray(){return this._gray}set gray(r){this._gray=r}}